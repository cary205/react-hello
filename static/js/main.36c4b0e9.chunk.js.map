{"version":3,"sources":["App.js","HelloMessage.js","Timer.js","TodoApp.js","MarkdownEditor.js","Fuli.js","serviceWorker.js","index.js","logo.svg"],"names":["App","react_default","a","createElement","className","src","logo","alt","href","target","rel","Component","HelloMessage","this","props","name","Timer","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","seconds","setState","_this2","interval","setInterval","tick","clearInterval","TodoApp","items","text","handleChange","bind","assertThisInitialized","handleSubmit","TodoApp_TodoList","onSubmit","htmlFor","id","onChange","value","length","e","preventDefault","newItem","Date","now","concat","TodoList","map","item","key","React","MarkdownEditor","__html","Remarkable","render","defaultValue","dangerouslySetInnerHTML","getRawMarkup","http","require","Fuli","data","fetch","then","res","json","results","get","console","log","JSON","stringify","entry","index","url","height","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","src_HelloMessage","src_Timer","src_TodoApp","src_MarkdownEditor","src_Fuli","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.36c4b0e9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\n\nclass HelloMessage extends Component {\n  render() {\n    return (\n      <div>\n        Hello {this.props.name}\n      </div>\n    );\n  }\n}\n\nexport default HelloMessage;","import React, { Component } from 'react';\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { seconds: 0 };\n  }\n\n  tick() {\n    this.setState(state => ({\n      seconds: state.seconds + 1\n    }));\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return (\n      <div>\n        Seconds: {this.state.seconds}\n      </div>\n    );\n  }\n}\n\nexport default Timer;","import React, { Component } from 'react';\n\nclass TodoApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { items: [], text: '' };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>TODO</h3>\n        <TodoList items={this.state.items} />\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"new-todo\">\n            What needs to be done?\n          </label>\n          <input\n            id=\"new-todo\"\n            onChange={this.handleChange}\n            value={this.state.text}\n          />\n          <button>\n            Add #{this.state.items.length + 1}\n          </button>\n        </form>\n      </div>\n    );\n  }\n\n  handleChange(e) {\n    this.setState({ text: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (!this.state.text.length) {\n      return;\n    }\n    const newItem = {\n      text: this.state.text,\n      id: Date.now()\n    };\n    this.setState(state => ({\n      items: state.items.concat(newItem),\n      text: ''\n    }));\n  }\n}\n\nclass TodoList extends React.Component {\n  render() {\n    return (\n      <ul>\n        {this.props.items.map(item => (\n          <li key={item.id}>{item.text}</li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default TodoApp;","import React, { Component } from 'react';\nimport Remarkable from 'remarkable';\n\nclass MarkdownEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = { value: 'Hello, **world**!' };\n  }\n\n  handleChange(e) {\n    this.setState({ value: e.target.value });\n  }\n\n  getRawMarkup() {\n    const md = new Remarkable();\n    return { __html: md.render(this.state.value) };\n  }\n\n  render() {\n    return (\n      <div className=\"MarkdownEditor\">\n        <h3>Input</h3>\n        <label htmlFor=\"markdown-content\">\n          Enter some markdown\n        </label>\n        <textarea\n          id=\"markdown-content\"\n          onChange={this.handleChange}\n          defaultValue={this.state.value}\n        />\n        <h3>Output</h3>\n        <div\n          className=\"content\"\n          dangerouslySetInnerHTML={this.getRawMarkup()}\n        />\n      </div>\n    );\n  }\n}\n\nexport default MarkdownEditor;","import React, { Component } from 'react';\n\nconst http = require('http');\n\nclass Fuli extends Component {\n  state = {\n    data: []\n  };\n  \n  componentDidMount() {\n    fetch(\"https://gank.io/api/random/data/%E7%A6%8F%E5%88%A9/20\").then(res => res.json()).then(data => {\n      this.setState({\n        data: data.results\n      });\n      \n      http.get('https://gank.io/api/random/data/%E7%A6%8F%E5%88%A9/2', (res) => {\n        console.log(\"http res: \" + JSON.stringify(res));\n      });\n    });\n    \n  }\n  \n  render() {\n    const { data } = this.state;\n    \n    const result = data.map((entry, index) => {\n        return <img key={index} src={entry.url} height=\"50\"></img>;\n    });\n    \n    return result;\n  }\n}\n\nexport default Fuli;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport HelloMessage from './HelloMessage';\nimport Timer from './Timer';\nimport TodoApp from './TodoApp';\nimport MarkdownEditor from './MarkdownEditor';\nimport Fuli from './Fuli';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<HelloMessage name=\"Taylor\" />, document.getElementById('helloMessage'));\nReactDOM.render(<Timer />, document.getElementById('timer'));\nReactDOM.render(<TodoApp />, document.getElementById('todoApp'));\nReactDOM.render(<MarkdownEditor />, document.getElementById('markdownEditor'));\nReactDOM.render(<Fuli />, document.getElementById('fuli'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}